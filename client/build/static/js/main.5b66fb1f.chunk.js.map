{"version":3,"sources":["redux/types.js","redux/reducers/authReducer.js","redux/reducers/postReducer.js","redux/reducers/commentReducer.js","redux/reducers/index.js","redux/sagas/authSaga.js","redux/sagas/postSaga.js","redux/sagas/commentSaga.js","redux/sagas/index.js","store.js","components/Header.js","components/Footer.js","components/auth/LoginModal.js","components/auth/RegisterModal.js","components/search/searchInput.js","components/AppNavbar.js","components/spinner/Spinner.js","components/post/PostCardOne.js","components/post/Category.js","routes/normalRoute/PostCardList.js","components/editor/EditorConfig.js","components/editor/UploadAdapter.js","routes/normalRoute/PostWrite.js","components/comments/Comments.js","routes/normalRoute/PostDetail.js","routes/normalRoute/Search.js","routes/normalRoute/CategoryResult.js","routes/protectedRoute/ProtectedRoute.js","routes/normalRoute/PostEdit.js","routes/normalRoute/Profile.js","routes/Router.js","routes/BannerIE.js","App.js","components/auth/loadUser.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","USER_LOADING_REQUEST","USER_LOADING_SUCCESS","USER_LOADING_FAILURE","CLEAR_ERROR_REQUEST","CLEAR_ERROR_SUCCESS","CLEAR_ERROR_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","POST_WRITE_REQUEST","POST_WRITE_SUCCESS","POST_WRITE_FAILURE","POST_LOADING_REQUEST_FIRST","POST_LOADING_REQUEST","POST_LOADING_SUCCESS","POST_LOADING_FAILURE","POST_UPLOADING_REQUEST","POST_UPLOADING_SUCCESS","POST_UPLOADING_FAILURE","POST_DETAIL_LOADING_REQUEST","POST_DETAIL_LOADING_SUCCESS","POST_DETAIL_LOADING_FAILURE","POST_DELETE_REQUEST","COMMENT_LOADING_REQUEST","COMMENT_LOADING_SUCCESS","COMMENT_LOADING_FAILURE","COMMENT_UPLOADING_REQUEST","COMMENT_UPLOADING_SUCCESS","COMMENT_UPLOADING_FAILURE","POST_EDIT_LOADING_REQUEST","POST_EDIT_LOADING_SUCCESS","POST_EDIT_LOADING_FAILURE","POST_EDIT_UPLOADING_REQUEST","POST_EDIT_UPLOADING_SUCCESS","POST_EDIT_UPLOADING_FAILURE","CATEGORY_FIND_REQUEST","CATEGORY_FIND_SUCCESS","CATEGORY_FIND_FAILURE","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_FAILURE","PASSWORD_EDIT_UPLOADING_REQUEST","PASSWORD_EDIT_UPLOADING_SUCCESS","PASSWORD_EDIT_UPLOADING_FAILURE","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","userID","userName","userRole","errorMsg","successMsg","previousMatchMsg","authReducer","state","action","type","setItem","payload","userId","id","role","name","removeItem","toekn","data","msg","_id","success_msg","fail_msg","match_msg","post","postDetail","postCount","loading","error","creatorId","categoryFindResult","title","searchBy","searchResult","postFindResult","posts","creator","category","comments","commentReducer","createRootReducer","history","combineReducers","router","connectRouter","auth","postReducer","comment","loginUser","watchLoginUser","logout","watchlogout","userLoading","watchuserLoading","registerUser","watchRegisterUser","clearError","watchclearError","editPassword","watchEditPassword","authSaga","loginUserAPI","loginData","axios","headers","loginAction","call","result","put","response","takeEvery","logoutAction","userLoadingAPI","config","get","registerUserAPI","req","editPasswordAPI","all","fork","loadPosts","watchLoadPosts","watchLoadFirstPosts","uploadPost","watchUploadPost","loadPostDetail","watchLoadPostDetail","deletePost","watchDeletePost","postEditLoad","watchPostEditLoad","postEditUpload","watchPostEditUpload","categoryFind","watchCategoryFind","watchSearchResult","postSaga","loadPostAPI","uploadPostAPI","push","loadPostDetailAPI","deletePostAPI","delete","postEditLoadAPI","postEditUploadAPI","categoryFindAPI","encodeURIComponent","searchResultAPI","loadComments","watchLoadComments","uploadComments","watchUploadComments","commentSaga","loadCommentsAPI","uploadCommentsAPI","rootSaga","dotenv","defaults","baseURL","process","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","Header","className","Row","Col","md","sm","Footer","Date","getFullYear","LoginModal","useState","modal","setModal","localMsg","setLocalMsg","email","password","form","setValues","dispatch","useDispatch","useSelector","useEffect","e","handleToggle","onChange","target","value","NavLink","onClick","href","Modal","isOpen","toggle","ModalHeader","ModalBody","Alert","color","Form","onSubmit","preventDefault","Label","for","Input","placeholder","Button","style","marginTop","block","RegisterModal","setValue","console","herf","FormGroup","SearchInput","a","resetValue","current","useRef","innerRef","AppNavbar","setIsOpen","onLogout","useCallback","authLink","NavItem","to","outline","guestLink","Navbar","dark","expand","Container","NavbarToggler","icon","faBars","Collapse","navbar","Nav","GrowingSpinner","Spinner","width","height","children","PostCardOne","Array","isArray","map","fileUrl","views","Card","CardImg","top","alt","src","CardBody","CardTitle","faMouse","Badge","length","Category","categoryName","prevInterSectingRect","PostCardList","infiniteScrollOption","agent","navigator","userAgent","toLowerCase","appName","search","indexOf","skipNumberRef","postCountRef","endMsg","endCheck","setEndCheck","getPostByButton","size","getPostByInfinite","options","lastPostElementRef","observer","IntersectionObserver","entry","isIntersecting","intersectionRect","y","rootMargin","threshold","observe","unobserve","useOnScreen","Helmet","ref","editorConfiguration","plugins","Essentials","Paragraph","Bold","Code","Italic","Heading","Indent","IndentBlock","Underline","Strikethrough","BlockQuote","Font","Alignment","List","Link","MediaEmbed","PasteFromOffice","Image","ImageStyle","ImageToolbar","ImageUpload","ImageResize","SimpleUploadAdapter","Table","TableToolbar","TextTransformation","toolbar","heading","model","view","class","fontSize","alignment","table","contentToolbar","image","resizeUnit","styles","typing","transformations","remove","language","simpleUpload","uploadUrl","MyUploadAdapter","loader","this","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","abort","XMLHttpRequest","open","responseType","genericErrorText","addEventListener","message","default","url","upload","evt","lengthComputable","uploadTotal","total","uploaded","loaded","FormData","append","send","Myinit","editor","createUploadAdapter","PostWrite","contents","regexSpace","regexSeperator","cateArray","body","undefined","replace","split","filter","Boolean","forEach","item","index","arrSelf","ClassicEditor","onReady","onBlur","event","getData","match","whereImg_start","whereImg_end","ext_name_find","result_Img_Url","ext_name","i","substring","Progress","animated","Comments","PostDetail","params","EditButton","HomeButton","faPencilAlt","date","faCommentDots","BallonEditor","disabled","creatorName","Search","searchTerm","useParams","CategoryResult","EditProtectedRoute","Component","component","rest","render","props","pathname","from","location","ProfileProtectedRoute","PostEdit","beforeCategoryString","tempCategory","defaultValue","Profile","previousPassword","rePassword","offset","CardHeader","MyRouter","path","exact","BannerIE","EdgeButton","App","test","loadUser","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5b66fb1f.chunk.js","sourcesContent":["//LGOIN\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\n//LOGOUT\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\n//USER LOADING\nexport const USER_LOADING_REQUEST = \"USER_LOADING_REQUEST\";\nexport const USER_LOADING_SUCCESS = \"USER_LOADING_SUCCESS\";\nexport const USER_LOADING_FAILURE = \"USER_LOADING_FAILURE\";\n\n//CLEAR ERROR\nexport const CLEAR_ERROR_REQUEST = \"CLEAR_ERROR_REQUEST\";\nexport const CLEAR_ERROR_SUCCESS = \"CLEAR_ERROR_SUCCESS\";\nexport const CLEAR_ERROR_FAILURE = \"CLEAR_ERROR_FAILURE\";\n\n//REGISTER\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\n\n//POST WRITE\nexport const POST_WRITE_REQUEST = \"POST_WRITE_REQUEST\";\nexport const POST_WRITE_SUCCESS = \"POST_WRITE_SUCCESS\";\nexport const POST_WRITE_FAILURE = \"POST_WRITE_FAILURE\";\n\n//POST LOADING\nexport const POST_LOADING_REQUEST_FIRST = \"POST_LOADING_REQUEST_FIRST\";\nexport const POST_LOADING_REQUEST = \"POST_LOADING_REQUEST\";\nexport const POST_LOADING_SUCCESS = \"POST_LOADING_SUCCESS\";\nexport const POST_LOADING_FAILURE = \"POST_LOADING_FAILURE\";\n\n//POST UPLOADING\nexport const POST_UPLOADING_REQUEST = \"POST_UPLOADING_REQUEST\";\nexport const POST_UPLOADING_SUCCESS = \"POST_UPLOADING_SUCCESS\";\nexport const POST_UPLOADING_FAILURE = \"POST_UPLOADING_FAILURE\";\n\n//POST DETAIL LOADING\nexport const POST_DETAIL_LOADING_REQUEST = \"POST_DETAIL_LOADING_REQUEST\";\nexport const POST_DETAIL_LOADING_SUCCESS = \"POST_DETAIL_LOADING_SUCCESS\";\nexport const POST_DETAIL_LOADING_FAILURE = \"POST_DETAIL_LOADING_FAILURE\";\n\n//POST DELETE\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\nexport const POST_DELETE_FAILURE = \"POST_DELETE_FAILURE\";\n\n//COMMENT LOADING\nexport const COMMENT_LOADING_REQUEST = \"COMMENT_LOADING_REQUEST\";\nexport const COMMENT_LOADING_SUCCESS = \"COMMENT_LOADING_SUCCESS\";\nexport const COMMENT_LOADING_FAILURE = \"COMMENT_LOADING_FAILURE\";\n\n//COMMENT UPLOADING\nexport const COMMENT_UPLOADING_REQUEST = \"COMMENT_UPLOADING_REQUEST\";\nexport const COMMENT_UPLOADING_SUCCESS = \"COMMENT_UPLOADING_SUCCESS\";\nexport const COMMENT_UPLOADING_FAILURE = \"COMMENT_UPLOADING_FAILURE\";\n\n//POST EDIT LOADING\nexport const POST_EDIT_LOADING_REQUEST = \"POST_EDIT_LOADING_REQUEST\";\nexport const POST_EDIT_LOADING_SUCCESS = \"POST_EDIT_LOADING_SUCCESS\";\nexport const POST_EDIT_LOADING_FAILURE = \"POST_EDIT_LOADING_FAILURE\";\n\n//POST EDIT UPLOADING\nexport const POST_EDIT_UPLOADING_REQUEST = \"POST_EDIT_UPLOADING_REQUEST\";\nexport const POST_EDIT_UPLOADING_SUCCESS = \"POST_EDIT_UPLOADING_SUCCESS\";\nexport const POST_EDIT_UPLOADING_FAILURE = \"POST_EDIT_UPLOADING_FAILURE\";\n\n//CATEGORY_FIND\nexport const CATEGORY_FIND_REQUEST = \"CATEGORY_FIND_REQUEST\";\nexport const CATEGORY_FIND_SUCCESS = \"CATEGORY_FIND_SUCCESS\";\nexport const CATEGORY_FIND_FAILURE = \"CATEGORY_FIND_FAILURE\";\n\n//SEARCH\nexport const SEARCH_REQUEST = \"SEARCH_REQUEST\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\";\n\n//PASSWORD EDIT\nexport const PASSWORD_EDIT_UPLOADING_REQUEST =\n  \"PASSWORD_EDIT_UPLOADING_REQUEST\";\nexport const PASSWORD_EDIT_UPLOADING_SUCCESS =\n  \"PASSWORD_EDIT_UPLOADING_SUCCESS\";\nexport const PASSWORD_EDIT_UPLOADING_FAILURE =\n  \"PASSWORD_EDIT_UPLOADING_FAILURE\";\n","import {\n  CLEAR_ERROR_FAILURE,\n  CLEAR_ERROR_REQUEST,\n  CLEAR_ERROR_SUCCESS,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n  USER_LOADING_REQUEST,\n  USER_LOADING_SUCCESS,\n  USER_LOADING_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  PASSWORD_EDIT_UPLOADING_FAILURE,\n  PASSWORD_EDIT_UPLOADING_REQUEST,\n  PASSWORD_EDIT_UPLOADING_SUCCESS,\n} from \"../types\";\n//store.js 에 있는 것과 initialState와 동일한 이름이어야 함.\nconst initialState = {\n  //backend에서 만들어준 token\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: \"\",\n  userID: \"\",\n  userName: \"\",\n  userRole: \"\",\n  errorMsg: \"\",\n  successMsg: \"\",\n  previousMatchMsg: \"\",\n};\n\nconst authReducer = (state = initialState, action) => {\n  // 기존 state를 ... 인 얕은 복사로 가져오는 것은 react는 기존 state에서 복사해와서 그 다음에 변화시키고 싶은 상태값을 적어주는 것이므로\n  switch (action.type) {\n    case REGISTER_REQUEST:\n    case LOGOUT_REQUEST:\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        errorMsg: \"\",\n        isLoading: true,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        userId: action.payload.user.id,\n        userRole: action.payload.user.role,\n        userName: action.payload.user.name,\n        errorMsg: \"\",\n      };\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"token\");\n      return {\n        token: null,\n        user: null,\n        userId: null,\n        userName: null,\n        isAuthenticated: false,\n        isLoading: false,\n        userRole: null,\n        errorMsg: \"\",\n      };\n    case REGISTER_FAILURE:\n    case LOGOUT_FAILURE:\n    case LOGIN_FAILURE:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        ...action.payload,\n        toekn: null,\n        user: null,\n        userId: null,\n        userRole: null,\n        userName: null,\n        isAuthenticated: false,\n        isLoading: false,\n        errorMsg: action.payload.data.msg,\n      };\n    case CLEAR_ERROR_REQUEST:\n      return {\n        ...state,\n      };\n    case CLEAR_ERROR_SUCCESS:\n      return {\n        ...state,\n        errorMsg: \"\",\n        previousMatchMsg: \"\",\n      };\n    case CLEAR_ERROR_FAILURE:\n      return {\n        ...state,\n        errorMsg: \"Clear Error Fail\",\n        previousMatchMsg: \"Celar Error Fail\",\n      };\n    case USER_LOADING_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADING_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n        userId: action.payload._id,\n        userName: action.payload.name,\n        userRole: action.payload.role,\n      };\n    case USER_LOADING_FAILURE:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        userRole: \"\",\n      };\n\n    case PASSWORD_EDIT_UPLOADING_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case PASSWORD_EDIT_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        successMsg: action.payload.data.success_msg,\n        errorMsg: \"\",\n        previousMatchMsg: \"\",\n      };\n    case PASSWORD_EDIT_UPLOADING_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        successMsg: \"\",\n        errorMsg: action.payload.data.fail_msg,\n        previousMatchMsg: action.payload.data.match_msg,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport {\n  POST_LOADING_SUCCESS,\n  POST_LOADING_REQUEST,\n  POST_LOADING_REQUEST_FIRST,\n  POST_LOADING_FAILURE,\n  POST_WRITE_REQUEST,\n  POST_WRITE_SUCCESS,\n  POST_WRITE_FAILURE,\n  POST_UPLOADING_FAILURE,\n  POST_UPLOADING_REQUEST,\n  POST_UPLOADING_SUCCESS,\n  POST_DETAIL_LOADING_REQUEST,\n  POST_DETAIL_LOADING_FAILURE,\n  POST_DETAIL_LOADING_SUCCESS,\n  POST_EDIT_LOADING_SUCCESS,\n  POST_EDIT_LOADING_FAILURE,\n  POST_EDIT_LOADING_REQUEST,\n  POST_EDIT_UPLOADING_FAILURE,\n  POST_EDIT_UPLOADING_REQUEST,\n  POST_EDIT_UPLOADING_SUCCESS,\n  CATEGORY_FIND_FAILURE,\n  CATEGORY_FIND_SUCCESS,\n  CATEGORY_FIND_REQUEST,\n  SEARCH_FAILURE,\n  SEARCH_REQUEST,\n  SEARCH_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  //인증이 된 사람만 글을 쓸 수 있도록 하기 위함\n  isAuthenticated: null,\n  post: [],\n  postDetail: \"\",\n  //총 post의 개수 -> 추후 infinite scroll 구현을 위함.\n  postCount: \"\",\n\n  loading: false,\n  error: \"\",\n  creatorId: \"\",\n  //추후 카테고리 검색 기능을 구현하기 위함\n  categoryFindResult: \"\",\n  title: \"\",\n  //검색기능을 구현하기 위한 초기값\n  searchBy: \"\",\n  searchResult: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_LOADING_REQUEST_FIRST:\n      console.log(\"start LOADING FIRST\");\n      return {\n        //초기값 얕은 복사\n        ...state,\n        //최초로 불러올때는 Post를 다 날려줌\n        post: [],\n        loading: true,\n      };\n    case POST_LOADING_REQUEST:\n      return {\n        //초기값 얕은 복사\n        ...state,\n        //infinite를 안쓰면 post=[] 달아서 날려줘야 하는데, infinite scroll을 쓰게 되면 이 값을 없애줘야 계속 쌓이면서 보이게 됨\n        // post: [],\n        // post: state.post.length === 0 ? [] : [...state.post],\n        loading: true,\n      };\n    case POST_LOADING_SUCCESS:\n      return {\n        //초기값 얕은 복사\n        ...state,\n        //...state.post 기존것이 있으면 가져오고, ...action.payload 우리가 새로 추가한 것을 추가해줌\n        //순서를 바꿔주면 화면에 보여지는 정렬에 차이가 있음.(궁금하면 직접 해보기)\n        post: [...state.post, ...action.payload.postFindResult],\n        categoryFindResult: action.payload.categoryFindResult,\n        postCount: action.payload.postCount,\n        loading: false,\n      };\n    case POST_LOADING_FAILURE:\n      return {\n        //초기값 얕은 복사\n        ...state,\n        loading: false,\n      };\n    //WRITING은 언제 작성한거지.....ㄷㄷ 43강 듣는데 작성되어 있길래 부랴부랴 적음...\n    case POST_WRITE_REQUEST:\n      return {\n        ...state,\n        post: [],\n        loading: true,\n      };\n    case POST_WRITE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case POST_WRITE_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    //POST_UPLOADING\n    case POST_UPLOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case POST_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case POST_UPLOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    //POST LOADING DETAIL\n    case POST_DETAIL_LOADING_REQUEST:\n      return {\n        ...state,\n        post: [],\n        loading: true,\n      };\n    case POST_DETAIL_LOADING_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        postDetail: action.payload,\n        creatorId: action.payload.creator._id,\n        title: action.payload.title,\n        category: action.payload.category,\n      };\n    case POST_DETAIL_LOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    //POST EDIT_LOADING\n    case POST_EDIT_LOADING_REQUEST:\n      //...state 의미는 기존에 있는 상태 그대로 놔두겠다는 것.\n      // post:[] 의미는 모든 post 불러들일 때 정보를 저장하는 배열\n      return {\n        ...state,\n        post: [],\n        loading: true,\n      };\n    case POST_EDIT_LOADING_SUCCESS:\n      return {\n        ...state,\n        postDetail: action.payload,\n        loading: false,\n      };\n    case POST_EDIT_LOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    //POST EDIT_UPLOADING\n    case POST_EDIT_UPLOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case POST_EDIT_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case POST_EDIT_UPLOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    //CATEGORY_FIND\n    case CATEGORY_FIND_REQUEST:\n      return {\n        ...state,\n        post: [],\n        loading: true,\n      };\n    case CATEGORY_FIND_SUCCESS:\n      return {\n        ...state,\n        categoryFindResult: action.payload,\n        loading: false,\n      };\n    case CATEGORY_FIND_FAILURE:\n      return {\n        ...state,\n        categoryFindResult: action.payload,\n        loading: false,\n      };\n\n    //SEARCH\n    case SEARCH_REQUEST:\n      return {\n        ...state,\n        post: [],\n        searchBy: action.payload,\n        loading: true,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        searchResult: action.payload,\n        searchBy: action.payload,\n        loading: false,\n      };\n    case SEARCH_FAILURE:\n      return {\n        ...state,\n        searchResult: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  COMMENT_LOADING_FAILURE,\n  COMMENT_LOADING_REQUEST,\n  COMMENT_LOADING_SUCCESS,\n  COMMENT_UPLOADING_FAILURE,\n  COMMENT_UPLOADING_REQUEST,\n  COMMENT_UPLOADING_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  comments: [],\n  creatorId: \"\",\n  loading: false,\n  isAuthenticated: false,\n};\n\nconst commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENT_LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case COMMENT_LOADING_SUCCESS:\n      return {\n        ...state,\n        comments: action.payload,\n        loading: false,\n      };\n    case COMMENT_LOADING_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case COMMENT_UPLOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case COMMENT_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        comments: [...state.comments, action.payload],\n        isAuthenticated: true,\n        loading: false,\n      };\n    case COMMENT_UPLOADING_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport authReducer from \"./authReducer\";\nimport postReducer from \"./postReducer\";\nimport commentReducer from \"./commentReducer\";\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    post: postReducer,\n    comment: commentReducer,\n  });\n\nexport default createRootReducer;\n","import axios from \"axios\";\nimport { all, fork, call, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  USER_LOADING_FAILURE,\n  USER_LOADING_REQUEST,\n  USER_LOADING_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  CLEAR_ERROR_FAILURE,\n  CLEAR_ERROR_SUCCESS,\n  CLEAR_ERROR_REQUEST,\n  PASSWORD_EDIT_UPLOADING_SUCCESS,\n  PASSWORD_EDIT_UPLOADING_FAILURE,\n  PASSWORD_EDIT_UPLOADING_REQUEST,\n} from \"../types\";\n\n//LOGIN\nconst loginUserAPI = (loginData) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"api/login\", loginData, config);\n};\n\nfunction* loginUser(loginAction) {\n  try {\n    const result = yield call(loginUserAPI, loginAction.payload);\n\n    yield put({\n      type: LOGIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: LOGIN_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchLoginUser() {\n  yield takeEvery(LOGIN_REQUEST, loginUser);\n}\n\n//LOGOUT\nfunction* logout(logoutAction) {\n  try {\n    yield put({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: LOGOUT_FAILURE,\n    });\n    console.log(e);\n  }\n}\n\nfunction* watchlogout() {\n  yield takeEvery(LOGOUT_REQUEST, logout);\n}\n\n//USER Loading\nconst userLoadingAPI = (token) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.get(\"api/login/user\", config);\n};\n\nfunction* userLoading(action) {\n  try {\n    const result = yield call(userLoadingAPI, action.payload);\n\n    yield put({\n      type: USER_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: USER_LOADING_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchuserLoading() {\n  yield takeEvery(USER_LOADING_REQUEST, userLoading);\n}\n\n//REGISTER\nconst registerUserAPI = (req) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"api/user\", req, config);\n};\n\nfunction* registerUser(loginAction) {\n  try {\n    const result = yield call(registerUserAPI, loginAction.payload);\n\n    yield put({\n      type: REGISTER_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: REGISTER_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchRegisterUser() {\n  yield takeEvery(REGISTER_REQUEST, registerUser);\n}\n\n//CLEAR ERROR\n\nfunction* clearError() {\n  try {\n    yield put({\n      type: CLEAR_ERROR_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CLEAR_ERROR_FAILURE,\n    });\n  }\n}\n\nfunction* watchclearError() {\n  yield takeEvery(CLEAR_ERROR_REQUEST, clearError);\n}\n\n//EDIT PASSWORD\nconst editPasswordAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.post(`api/user/${payload.userName}/profile`, payload, config);\n};\n\nfunction* editPassword(action) {\n  try {\n    const result = yield call(editPasswordAPI, action.payload);\n    yield put({\n      type: PASSWORD_EDIT_UPLOADING_SUCCESS,\n      payload: result,\n    });\n  } catch (e) {\n    yield put({\n      type: PASSWORD_EDIT_UPLOADING_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchEditPassword() {\n  yield takeEvery(PASSWORD_EDIT_UPLOADING_REQUEST, editPassword);\n}\n\nexport default function* authSaga() {\n  yield all([\n    fork(watchLoginUser),\n    fork(watchlogout),\n    fork(watchuserLoading),\n    fork(watchRegisterUser),\n    fork(watchclearError),\n    fork(watchEditPassword),\n  ]);\n}\n","import axios from \"axios\";\nimport {\n  POST_DETAIL_LOADING_FAILURE,\n  POST_DETAIL_LOADING_REQUEST,\n  POST_DETAIL_LOADING_SUCCESS,\n  POST_LOADING_FAILURE,\n  POST_LOADING_REQUEST,\n  POST_LOADING_REQUEST_FIRST,\n  POST_LOADING_SUCCESS,\n  POST_UPLOADING_FAILURE,\n  POST_UPLOADING_REQUEST,\n  POST_UPLOADING_SUCCESS,\n  POST_DELETE_REQUEST,\n  POST_DELETE_FAILURE,\n  POST_DELETE_SUCCESS,\n  POST_EDIT_LOADING_SUCCESS,\n  POST_EDIT_LOADING_FAILURE,\n  POST_EDIT_LOADING_REQUEST,\n  POST_EDIT_UPLOADING_SUCCESS,\n  POST_EDIT_UPLOADING_REQUEST,\n  POST_EDIT_UPLOADING_FAILURE,\n  CATEGORY_FIND_REQUEST,\n  CATEGORY_FIND_SUCCESS,\n  CATEGORY_FIND_FAILURE,\n  SEARCH_FAILURE,\n  SEARCH_REQUEST,\n  SEARCH_SUCCESS,\n} from \"../types\";\nimport { put, all, fork, call, takeEvery } from \"redux-saga/effects\";\nimport { push } from \"connected-react-router\";\n\n//All Posts load\nconst loadPostAPI = (payload) => {\n  // infinite scroll 적용하기 전 코드\n  // return axios.get(\"/api/post\");\n  // infinite scroll 적용\n  return axios.get(`/api/post/skip/${payload}`);\n};\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostAPI, action.payload);\n    console.log(\"saga/loadPosts\");\n    yield put({\n      type: POST_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: POST_LOADING_FAILURE,\n      payload: e,\n    });\n    // yield push(\"/\");\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeEvery(POST_LOADING_REQUEST, loadPosts);\n}\nfunction* watchLoadFirstPosts() {\n  yield takeEvery(POST_LOADING_REQUEST_FIRST, loadPosts);\n}\n//Post Upload\nconst uploadPostAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.post(\"/api/post\", payload, config);\n};\n\nfunction* uploadPost(action) {\n  try {\n    const result = yield call(uploadPostAPI, action.payload);\n\n    yield put({\n      type: POST_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/post/${result.data._id}`));\n  } catch (e) {\n    yield put({\n      type: POST_UPLOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchUploadPost() {\n  yield takeEvery(POST_UPLOADING_REQUEST, uploadPost);\n}\n\n//Post Detail\nconst loadPostDetailAPI = (payload) => {\n  //Post Detail을 가져올때는 토큰이 필요 없음. 일반적인 사람들도 내용을 볼 수 있어야 하므로.\n\n  return axios.get(`/api/post/${payload}`);\n};\n\nfunction* loadPostDetail(action) {\n  try {\n    const result = yield call(loadPostDetailAPI, action.payload);\n\n    yield put({\n      type: POST_DETAIL_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(\"loadPostDetail error\", e);\n    yield put({\n      type: POST_DETAIL_LOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchLoadPostDetail() {\n  yield takeEvery(POST_DETAIL_LOADING_REQUEST, loadPostDetail);\n}\n\n//Post Delete\nconst deletePostAPI = (payload) => {\n  //지우는 작업은 글 쓴 사람만 지울 수 있어야 함.\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.delete(`/api/post/${payload.id}`, config);\n};\n\nfunction* deletePost(action) {\n  try {\n    const result = yield call(deletePostAPI, action.payload);\n\n    yield put({\n      type: POST_DELETE_SUCCESS,\n      payload: result.data,\n    });\n\n    yield put(push(\"/\"));\n  } catch (e) {\n    console.log(\"delete error\", e);\n    yield put({\n      type: POST_DELETE_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchDeletePost() {\n  yield takeEvery(POST_DELETE_REQUEST, deletePost);\n}\n\n//Post EDIT LOAD\nconst postEditLoadAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.get(`/api/post/${payload.id}/edit`, config);\n};\n\nfunction* postEditLoad(action) {\n  try {\n    const result = yield call(postEditLoadAPI, action.payload);\n    yield put({\n      type: POST_EDIT_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(\"delete error\", e);\n    yield put({\n      type: POST_EDIT_LOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchPostEditLoad() {\n  yield takeEvery(POST_EDIT_LOADING_REQUEST, postEditLoad);\n}\n\n//Post EDIT UPLOAD\nconst postEditUploadAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  //const token = payload.token 인데 payload가 앞에 있어야 token값을 가져올 수 있음\n  return axios.post(`/api/post/${payload.id}/edit`, payload, config);\n};\n\nfunction* postEditUpload(action) {\n  try {\n    const result = yield call(postEditUploadAPI, action.payload);\n\n    yield put({\n      type: POST_EDIT_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/post/${result.data._id}`));\n  } catch (e) {\n    console.log(\"delete error\", e);\n    yield put({\n      type: POST_EDIT_UPLOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchPostEditUpload() {\n  yield takeEvery(POST_EDIT_UPLOADING_REQUEST, postEditUpload);\n}\n\n//Category Find\nconst categoryFindAPI = (payload) => {\n  //encodeURIComponent : 영어가 아닌 문자들을 UTF-8로 인코딩해서 적어줌.\n  return axios.get(`/api/post/category/${encodeURIComponent(payload)}`);\n};\n\nfunction* categoryFind(action) {\n  try {\n    const result = yield call(categoryFindAPI, action.payload);\n\n    console.log(\"postSaga:categoryFind\", result);\n    yield put({\n      type: CATEGORY_FIND_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CATEGORY_FIND_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchCategoryFind() {\n  yield takeEvery(CATEGORY_FIND_REQUEST, categoryFind);\n}\n\n//SEARCH\nconst searchResultAPI = (payload) => {\n  return axios.get(`/api/search/${encodeURIComponent(payload)}`);\n};\n\nfunction* searchResult(action) {\n  try {\n    const result = yield call(searchResultAPI, action.payload);\n    yield put({\n      type: SEARCH_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/search/${encodeURIComponent(action.payload)}`));\n  } catch (e) {\n    yield put({\n      type: SEARCH_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchSearchResult() {\n  yield takeEvery(SEARCH_REQUEST, searchResult);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchUploadPost),\n    fork(watchLoadPostDetail),\n    fork(watchDeletePost),\n    fork(watchPostEditLoad),\n    fork(watchPostEditUpload),\n    fork(watchCategoryFind),\n    fork(watchSearchResult),\n    fork(watchLoadFirstPosts),\n  ]);\n}\n","import axios from \"axios\";\nimport { all, fork, call, put, takeEvery } from \"redux-saga/effects\";\nimport { push } from \"connected-react-router\";\n\nimport {\n  COMMENT_LOADING_FAILURE,\n  COMMENT_LOADING_REQUEST,\n  COMMENT_LOADING_SUCCESS,\n  COMMENT_UPLOADING_SUCCESS,\n  COMMENT_UPLOADING_FAILURE,\n  COMMENT_UPLOADING_REQUEST,\n} from \"../types\";\n\n///////////////\n//Load Comment\n///////////////\nconst loadCommentsAPI = (payload) => {\n  return axios.get(`/api/post/${payload}/comments`);\n};\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.payload);\n\n    yield put({\n      type: COMMENT_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: COMMENT_LOADING_FAILURE,\n      payload: e,\n    });\n    yield push(\"/\");\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeEvery(COMMENT_LOADING_REQUEST, loadComments);\n}\n\n///////////////\n//Upload Comment\n///////////////\nconst uploadCommentsAPI = (payload) => {\n  return axios.post(`/api/post/${payload.id}/comments`, payload);\n};\n\nfunction* uploadComments(action) {\n  try {\n    const result = yield call(uploadCommentsAPI, action.payload);\n\n    yield put({\n      type: COMMENT_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: COMMENT_UPLOADING_FAILURE,\n      payload: e,\n    });\n    yield push(\"/\");\n  }\n}\n\nfunction* watchUploadComments() {\n  yield takeEvery(COMMENT_UPLOADING_REQUEST, uploadComments);\n}\n\nexport default function* commentSaga() {\n  yield all([fork(watchLoadComments), fork(watchUploadComments)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport authSaga from \"./authSaga\";\nimport dotenv from \"dotenv\";\nimport postSaga from \"./postSaga\";\nimport commentSaga from \"./commentSaga\";\n\ndotenv.config();\naxios.defaults.baseURL = process.env.REACT_APP_BASIC_SERVER_URL;\n\n//function* == generate 함수 : 여러 값을 반환할 수 있음(일반함수는 1개만 반환함)\nexport default function* rootSaga() {\n  yield all([fork(authSaga), fork(postSaga), fork(commentSaga)]);\n}\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport createRootReducer from \"./redux/reducers/index\";\nimport rootSaga from \"./redux/sagas\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\n//만드는 WEB의 모든 상태 초기값\nconst initialState = {};\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//배포단계에서는 개발자도구를 안보이게 해준다...?\nconst composeEnhancer =\n  process.env.NODE_ENV === \"production\" ? compose : devtools || compose;\n\n//앱의 상태를 보관하는 Redux store\n//여기서는 3가지 값을 가지고 있다.\n//createRotReducer :\n//initialState : 실제 앱의 모든 상태 초가깂\n//composeEnhancer :\nconst store = createStore(\n  createRootReducer(history),\n  initialState,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <div id=\"page-header\" className=\"mb-3\">\n      <Row>\n        <Col md=\"6\" sm=\"auto\" className=\"text-center m-auto\">\n          <h1>Read My Blog</h1>\n          <p>Welcome to SBlog</p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Footer = () => {\n  const thisYear = () => {\n    const year = new Date().getFullYear();\n    return year;\n  };\n\n  return (\n    <div id=\"main-footer\" className=\"text-center p-2\">\n      {/* ReactStrap에서는 1개의 행만 있더라도 반드시 Row 다음에는 Col이 와야함 */}\n      <Row>\n        <Col>\n          <p>\n            Copyright &copy;<span>{thisYear()}</span>\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  NavLink,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Alert,\n  Form,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from \"../../redux/types\";\nimport {} from \"reactstrap\";\n\nconst LoginModal = () => {\n  const [modal, setModal] = useState(false);\n  const [localMsg, setLocalMsg] = useState(\"\");\n  const [form, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const dispatch = useDispatch();\n  const { errorMsg } = useSelector((state) => state.auth);\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [errorMsg]);\n\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST,\n    });\n    setModal(!modal);\n  };\n\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = form;\n    const user = { email, password };\n    console.log(\"onSubmit\", user);\n    //authSaga.js 의 loginUser 함수에서 action.payload 와 아래 넘겨주는 값의 변수명이 동일해야함.\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: user,\n    });\n  };\n  return (\n    <div>\n      <NavLink onClick={handleToggle} href=\"#\">\n        Login\n      </NavLink>\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Login</ModalHeader>\n        <ModalBody>\n          {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              onChange={onChange}\n            ></Input>\n            <Label for=\"password\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              onChange={onChange}\n            ></Input>\n            <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n              Login\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  NavLink,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Alert,\n  Button,\n  Input,\n} from \"reactstrap\";\nimport { CLEAR_ERROR_REQUEST, REGISTER_REQUEST } from \"../../redux/types\";\n\nconst RegisterModal = () => {\n  const [modal, setModal] = useState(false);\n  const [form, setValue] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [localMsg, setLocalMsg] = useState(\"\");\n  //index.js 의 auth를 의미함.\n  const { errorMsg } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST,\n    });\n    setModal(!modal);\n  };\n\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [errorMsg]);\n\n  const onChange = (e) => {\n    setValue({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password } = form;\n    const newUser = { name, email, password };\n    console.log(newUser, \"newUser\");\n    dispatch({\n      type: REGISTER_REQUEST,\n      payload: newUser,\n    });\n  };\n\n  return (\n    <div>\n      <NavLink onClick={handleToggle} herf=\"#\">\n        Register\n      </NavLink>\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Register</ModalHeader>\n        <ModalBody>\n          {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                onChange={onChange}\n              />\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                onChange={onChange}\n              />\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={onChange}\n              />\n              <Button color=\"dark\" className=\"mt-2\" block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\nexport default RegisterModal;\n","import React, { Fragment, useRef, useState } from \"react\";\nimport { Form, Input } from \"reactstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_REQUEST } from \"../../redux/types\";\n\nconst SearchInput = () => {\n  const dispatch = useDispatch();\n  const [form, setValues] = useState({ searchBy: \"\" });\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    const { searchBy } = form;\n    dispatch({\n      type: SEARCH_REQUEST,\n      payload: searchBy,\n    });\n\n    resetValue.current.value = \"\";\n  };\n  const resetValue = useRef(null);\n  return (\n    <Fragment>\n      <Form onSubmit={onSubmit} className=\"col mx-5 mt-2\">\n        <Input name=\"searchBy\" onChange={onChange} innerRef={resetValue} />\n      </Form>\n    </Fragment>\n  );\n};\n\nexport default SearchInput;\n","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n  Navbar,\n  Container,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n  Form,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./auth/LoginModal\";\nimport { LOGOUT_REQUEST } from \"../redux/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport SearchInput from \"./search/searchInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nconst AppNavbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { isAuthenticated, user, userRole } = useSelector(\n    (state) => state.auth\n  );\n\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => {\n    dispatch({\n      type: LOGOUT_REQUEST,\n    });\n  }, [dispatch]);\n  //Login하고 나면 로그인 메뉴가 열려 있을 필요가 없어서 만들어줌. isopen을 false로 해서 닫아놓으려고\n  useEffect(() => {\n    setIsOpen(false);\n  }, [user]);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const addPostClick = () => {};\n\n  //enum: [\"MainJuin\", \"SubJuin\", \"User\"],\n  const authLink = (\n    <Fragment>\n      <NavItem>\n        {userRole === \"MainJuin\" ? (\n          <Form className=\"col mt-2\">\n            <Link\n              to=\"/post\"\n              className=\"btn btn-success block text-white px-3\"\n              onClick={addPostClick}\n            >\n              Add Post\n            </Link>\n          </Form>\n        ) : (\n          \"\"\n        )}\n      </NavItem>\n      <NavItem className=\"d-flex justify-content-center mx-3\">\n        <Form className=\"col mt-2\">\n          {user && user.name ? (\n            <Link to={`/user/${user.name}/profile`}>\n              <Button outline color=\"light\" className=\"px-3\" block>\n                <strong>{user ? `Welcome ${user.name}!` : \"\"}</strong>\n              </Button>\n            </Link>\n          ) : (\n            <Button outline color=\"light\" className=\"px-3\" block>\n              <strong>No User</strong>\n            </Button>\n          )}\n        </Form>\n      </NavItem>\n      <NavItem>\n        <Form className=\"col\">\n          <Link onClick={onLogout} to=\"#\">\n            <Button outline color=\"light\" className=\"mt-2\" block>\n              Logout\n            </Button>\n          </Link>\n        </Form>\n      </NavItem>\n    </Fragment>\n  );\n\n  const guestLink = (\n    <Fragment>\n      <NavItem>\n        <RegisterModal />\n      </NavItem>\n      <NavItem>\n        <LoginModal />\n      </NavItem>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <Navbar color=\"dark\" dark expand=\"lg\" className=\"sticky-top\">\n        <Container>\n          <Link to=\"/\" className=\"fs-3 fw-bold text-white text-decoration-none\">\n            ㅅㅂㄹㄱ SBlog\n          </Link>\n          <NavbarToggler onClick={handleToggle}>\n            <span>\n              <FontAwesomeIcon icon={faBars} />\n            </span>\n          </NavbarToggler>\n          <Collapse isOpen={isOpen} navbar>\n            <SearchInput isOpen={isOpen} />\n            {/* collapse 기능 이용해서 true/false일 때 인증값을 기준으로 접속자 권한을 표시해줌. */}\n            <Nav className=\"ms-auto d-flex justify-content-around\" navbar>\n              {isAuthenticated ? authLink : guestLink}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </Fragment>\n  );\n};\n\nexport default AppNavbar;\n","import React, { Fragment } from \"react\";\nimport { Row, Spinner } from \"reactstrap\";\n\nexport const GrowingSpinner = (\n  <Fragment>\n    <Row className=\"d-flex justify-content-center m-5\">\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"primary\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"secondary\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"success\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"danger\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"warning\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"info\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"light\"\n        children=\"\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"dark\"\n        children=\"\"\n      />\n    </Row>\n  </Fragment>\n);\n","import React, { Fragment } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  Button,\n  Badge,\n  Row,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMouse } from \"@fortawesome/free-solid-svg-icons\";\n\n//post가 배열로 존재한다면\n//post.map 해주는데 몽고DB 는 개개별 id를 '_id'로 표기, 그 외\n//Link to 로 Router.js 에서 만들어준 postDetail로 넘어가게 할꺼임\n//text-truncate : 텍스트가 표시영역 넘어가면 ...으로 표시\nconst PostCardOne = ({ post }) => {\n  return (\n    <Fragment>\n      {Array.isArray(post)\n        ? post.map(({ _id, title, fileUrl, comments, views }) => {\n            return (\n              <div key={_id} className=\"col-md-4\">\n                <Link\n                  to={`/post/${_id}`}\n                  className=\"text-dark text-decoration-none\"\n                >\n                  <Card className=\"mb-3\">\n                    <CardImg top alt=\"카드이미지\" src={fileUrl} />\n                    <CardBody>\n                      <CardTitle className=\"text-truncate d-flex justify-content-between\">\n                        <span className=\"text-truncate\">{title}</span>\n                        <span>\n                          <FontAwesomeIcon icon={faMouse} /> &nbsp;&nbsp;{\" \"}\n                          <span>{views}</span>\n                        </span>\n                      </CardTitle>\n                      <Row>\n                        <Button color=\"primary\" className=\"p-2 btn-block\">\n                          More <Badge color=\"light\">{comments.length}</Badge>\n                        </Button>\n                      </Row>\n                    </CardBody>\n                  </Card>\n                </Link>\n              </div>\n            );\n          })\n        : \"\"}\n    </Fragment>\n  );\n};\n\nexport default PostCardOne;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Badge } from \"reactstrap\";\nconst Category = ({ post, type }) => {\n  return (\n    <Fragment>\n      {Array.isArray(post)\n        ? post.map(({ _id, categoryName, post }) => (\n            <div key={_id} className=\"ms-1 mt-1 my_category\">\n              <Link\n                to={`/post/category/${categoryName}`}\n                className=\"text-dartk text-decoration-none\"\n              >\n                <span className=\"ms-1\">\n                  <Button color=\"info\">\n                    {categoryName}\n                    {type === \"list\" ? (\n                      <Badge color=\"light\">{post.length}</Badge>\n                    ) : (\n                      \"\"\n                    )}\n                  </Button>\n                </span>\n              </Link>\n            </div>\n          ))\n        : \"\"}\n    </Fragment>\n  );\n};\nexport default Category;\n","import React, { useEffect, Fragment, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  POST_LOADING_REQUEST,\n  POST_LOADING_REQUEST_FIRST,\n} from \"../../redux/types\";\nimport { GrowingSpinner } from \"../../components/spinner/Spinner\";\nimport { Row, Alert, Button } from \"reactstrap\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\nimport Category from \"../../components/post/Category\";\n\nlet prevInterSectingRect = 0;\nconst PostCardList = () => {\n  console.log(\"start postcardlist\");\n  const { post, categoryFindResult, loading, postCount } = useSelector(\n    (state) => state.post\n  );\n  const dispatch = useDispatch();\n\n  //option (TRUE)= infinite Scroll, option(FALSE) = button\n  let infiniteScrollOption = true;\n\n  // 익스플로러(Internet Explorer) 체크\n  var agent = navigator.userAgent.toLowerCase();\n  if (\n    (navigator.appName == \"Netscape\" &&\n      navigator.userAgent.search(\"Trident\") != -1) ||\n    agent.indexOf(\"msie\") != -1\n  ) {\n    infiniteScrollOption = false;\n  }\n\n  useEffect(() => {\n    dispatch({ type: POST_LOADING_REQUEST_FIRST, payload: 0 });\n  }, [dispatch]);\n\n  //infinite Scroll : 처음에  0값 넘겨주고 그 후 request하면 postCount값에서 6개를 빼서 넘겨주고, 6개를 넘겨주고 하는 방식, 남은 숫자가 있을때까지 반복.\n  //전 생애주기에서 유일하게 살아남는 값 = useRef = 0\n  const skipNumberRef = useRef(0);\n  const postCountRef = useRef(0);\n  const endMsg = useRef(false);\n  const [endCheck, setEndCheck] = useState(false);\n\n  //처음에 postCount 값을 받아오기 전에 isintersecting이 감지되도 dispatch 방지하기 위한 부분\n  if (postCount > 0) {\n    postCountRef.current = postCount - 6;\n  }\n\n  /////////////////////////////////////////////\n  //버튼 형식으로 Post 가져오기\n  const readMorePost = () => {\n    let remainPostCount = postCountRef.current - skipNumberRef.current;\n    if (remainPostCount >= 0) {\n      dispatch({\n        type: POST_LOADING_REQUEST,\n        payload: skipNumberRef.current + 6,\n      });\n      skipNumberRef.current += 6;\n    } else {\n      setEndCheck(true);\n    }\n  };\n\n  const getPostByButton = (\n    <Fragment>\n      {loading ? (\n        <div>{GrowingSpinner}</div>\n      ) : endCheck ? (\n        <div>\n          <Alert color=\"danger\" className=\"text-center font-weight-bolder\">\n            더 이상의 포스트는 없습니다.\n          </Alert>\n        </div>\n      ) : (\n        <div className=\"d-grid gap-2 mb-3 col-6 mx-auto\">\n          <Button\n            block\n            size=\"lg\"\n            className=\"text-center justify-content-center\"\n            onClick={readMorePost}\n          >\n            + 더 보기\n          </Button>\n        </div>\n      )}\n    </Fragment>\n  );\n\n  //Infinite Scroll 방식\n  const getPostByInfinite = (\n    /* 6개의 포스트를 읽은 후 div 1픽셀에서 lastPostElementRef 감지를 해서, 그게 loading값이면 GrowingSpiner가 나옴 */\n    /* loading이 끝났는데 endMsg가 존재한다면, endMsg출력 */\n    <Fragment>\n      {loading ? (\n        <div>{GrowingSpinner}</div>\n      ) : endCheck ? (\n        <div>\n          <Alert color=\"danger\" className=\"text-center font-weight-bolder\">\n            더 이상의 포스트는 없습니다.\n          </Alert>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </Fragment>\n  );\n\n  const useOnScreen = (options) => {\n    const lastPostElementRef = useRef();\n\n    useEffect(() => {\n      //observer를 달아줌. InterserctionObserver란 임계값(threshold)이 바뀌게 되면 인터섹션옵저버 객체의 콜백함수를 실행\n      //여기 프로젝트에서는 lastPostElementRef 값을 달아놓은 div 값이 안보이다가 임계값만큼 변하게 되면 실행되는 것임.\n      // 익스플로러에서는 인터섹션 옵저버 방식이 안먹힘..바벨로도 안됨...\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          //처음에 postCount 값을 받아오기 전에 isintersecting이 감지되버리면 postCount=0인 상태에서 remain이 -값이 되어서 endMsg=True가 됨.\n          //처음에 loading을 하면서 감지되어서 여러번 REQ를 dispatch하는 것 방지를 위해서\n          //prevInterSectionRect.y 값을 비교해서 동일한 위치에서 감지되면 if문 안넘어가도록 해줬음.\n          if (\n            postCount > 0 &&\n            entry.isIntersecting &&\n            prevInterSectingRect !== entry.intersectionRect.y\n          ) {\n            prevInterSectingRect = entry.intersectionRect.y;\n            let remainPostCount = postCountRef.current - skipNumberRef.current;\n            if (remainPostCount >= 0) {\n              dispatch({\n                type: POST_LOADING_REQUEST,\n                payload: skipNumberRef.current + 6,\n              });\n              skipNumberRef.current += 6;\n            } else {\n              endMsg.current = true;\n              setEndCheck(true);\n            }\n          }\n        },\n        {\n          rootMargin: \"0px\",\n          threshold: \"0.9\",\n        }\n      );\n      //lastPostElementRef값이 달려있으면 observer에 달아주는데,\n      if (lastPostElementRef.current) {\n        observer.observe(lastPostElementRef.current);\n      }\n      //달아주고 observer실행되고 나서 useEffect 끝나면 바로 끊어주는 작업을 함.\n      const LastElememntReturnFunc = () => {\n        if (lastPostElementRef.current) {\n          observer.unobserve(lastPostElementRef.current);\n          // observer.disconnect(lastPostElementRef.current);\n        }\n      };\n\n      return LastElememntReturnFunc;\n    }, [lastPostElementRef, options]);\n    return [lastPostElementRef];\n  };\n\n  //임계값을 달아주는 이유는 화면 배율에 따라서 처음부터 6개가 다보여도 화면이 남을 수가 있음.\n  //그럴 경우에는 lastPostEleRef 를 달아준 <div> 자체의 변화가 없기 때문에 처음부터 마지막으로 판단할수가 있어서 적절한 임계값을 찾아서 넣어주는 것임.\n  //상세내용은 : https://developer.mozilla.org/ko/docs/Web/API/IntersectionObserver/IntersectionObserver\n  //0.0~1.0 사이. 0.0:대상의 단일 픽셀이라도 보여지면, 대상이 보이는 것으로 계산. 1.0은 전체 대상 요소가 표시됨을 의미합니다\n  const [lastPostElementRef] = useOnScreen({\n    rootMargin: \"0px\",\n    threshold: \"0.9\",\n  });\n  ///////////////////////////\n\n  //PostCardList.js 와 PostCardOne.js 가 Container - Presenter 방식임\n  //Container에는 값을 불러오는 것들을 작업을 하고, Presenter에 값을 넘겨주고, Presenter에서는 보여주는 작업을 함.\n  return (\n    <Fragment>\n      <Helmet title=\"Home\" />\n      <Row className=\"border-bottom border-top border-primary py-2 mb-3\">\n        <Category post={categoryFindResult} type=\"list\" />\n      </Row>\n      <Row>{post ? <PostCardOne post={post} /> : GrowingSpinner}</Row>\n      {infiniteScrollOption ? getPostByInfinite : getPostByButton}\n\n      <div ref={lastPostElementRef}></div>\n      {/* className=\"bg-info border border-5 border-danger\" */}\n    </Fragment>\n  );\n};\n\nexport default PostCardList;\n","import Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\n\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\n\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\n\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\n\nimport Underline from \"@ckeditor/ckeditor5-basic-styles/src/underline\";\n\nimport Strikethrough from \"@ckeditor/ckeditor5-basic-styles/src/strikethrough\";\n\nimport Code from \"@ckeditor/ckeditor5-basic-styles/src/code\";\n\nimport BlockQuote from \"@ckeditor/ckeditor5-block-quote/src/blockquote\";\n\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\n\nimport MediaEmbed from \"@ckeditor/ckeditor5-media-embed/src/mediaembed\";\n\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\n\nimport Heading from \"@ckeditor/ckeditor5-heading/src/heading\";\n\nimport Font from \"@ckeditor/ckeditor5-font/src/font\";\n\nimport Image from \"@ckeditor/ckeditor5-image/src/image\";\n\nimport ImageStyle from \"@ckeditor/ckeditor5-image/src/imagestyle\";\n\nimport ImageToolbar from \"@ckeditor/ckeditor5-image/src/imagetoolbar\";\n\nimport ImageUpload from \"@ckeditor/ckeditor5-image/src/imageupload\";\n\nimport ImageResize from \"@ckeditor/ckeditor5-image/src/imageresize\";\n\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\n\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\n\nimport Table from \"@ckeditor/ckeditor5-table/src/table\";\n\nimport TableToolbar from \"@ckeditor/ckeditor5-table/src/tabletoolbar\";\n\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\n\nimport Indent from \"@ckeditor/ckeditor5-indent/src/indent\";\n\nimport IndentBlock from \"@ckeditor/ckeditor5-indent/src/indentblock\";\n\n/* import Base64UploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter\"; */\n\nimport SimpleUploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter\";\n\nimport \"@ckeditor/ckeditor5-build-classic/build/translations/ko\";\n\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nexport const editorConfiguration = {\n  plugins: [\n    Essentials,\n\n    Paragraph,\n\n    Bold,\n\n    Code,\n\n    Italic,\n\n    Heading,\n\n    Indent,\n\n    IndentBlock,\n\n    Underline,\n\n    Strikethrough,\n\n    BlockQuote,\n\n    Font,\n\n    Alignment,\n\n    List,\n\n    Link,\n\n    MediaEmbed,\n\n    PasteFromOffice,\n\n    Image,\n\n    ImageStyle,\n\n    ImageToolbar,\n\n    ImageUpload,\n\n    ImageResize,\n\n    SimpleUploadAdapter,\n\n    Table,\n\n    TableToolbar,\n\n    TextTransformation,\n  ],\n\n  toolbar: [\n    \"heading\",\n\n    \"|\",\n\n    \"bold\",\n\n    \"italic\",\n\n    \"underline\",\n\n    \"strikethrough\",\n\n    \"code\",\n\n    \"|\",\n\n    \"fontSize\",\n\n    \"fontColor\",\n\n    \"fontBackgroundColor\",\n\n    \"|\",\n\n    \"alignment\",\n\n    \"outdent\",\n\n    \"indent\",\n\n    \"bulletedList\",\n\n    \"numberedList\",\n\n    \"blockQuote\",\n\n    \"|\",\n\n    \"link\",\n\n    \"insertTable\",\n\n    \"imageUpload\",\n\n    \"mediaEmbed\",\n\n    \"|\",\n\n    \"undo\",\n\n    \"redo\",\n  ],\n\n  heading: {\n    options: [\n      {\n        model: \"paragraph\",\n\n        view: \"p\",\n\n        title: \"본문\",\n\n        class: \"ck-heading_paragraph\",\n      },\n\n      {\n        model: \"heading1\",\n\n        view: \"h1\",\n\n        title: \"헤더1\",\n\n        class: \"ck-heading_heading1\",\n      },\n\n      {\n        model: \"heading2\",\n\n        view: \"h2\",\n\n        title: \"헤더2\",\n\n        class: \"ck-heading_heading2\",\n      },\n\n      {\n        model: \"heading3\",\n\n        view: \"h3\",\n\n        title: \"헤더3\",\n\n        class: \"ck-heading_heading3\",\n      },\n    ],\n  },\n\n  fontSize: {\n    options: [\n      9,\n\n      10,\n\n      11,\n\n      12,\n\n      13,\n\n      14,\n\n      15,\n\n      16,\n\n      17,\n\n      18,\n\n      19,\n\n      20,\n\n      21,\n\n      23,\n\n      25,\n\n      27,\n\n      29,\n\n      31,\n\n      33,\n\n      35,\n    ],\n  },\n\n  alignment: {\n    options: [\"justify\", \"left\", \"center\", \"right\"],\n  },\n\n  table: {\n    contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n  },\n\n  image: {\n    resizeUnit: \"px\",\n\n    toolbar: [\n      \"imageStyle:alignLeft\",\n\n      \"imageStyle:full\",\n\n      \"imageStyle:alignRight\",\n\n      \"|\",\n\n      \"imageTextAlternative\",\n    ],\n\n    styles: [\"full\", \"alignLeft\", \"alignRight\"],\n  },\n\n  typing: {\n    transformations: {\n      remove: [\n        \"enDash\",\n\n        \"emDash\",\n\n        \"oneHalf\",\n\n        \"oneThird\",\n\n        \"twoThirds\",\n\n        \"oneForth\",\n\n        \"threeQuarters\",\n      ],\n    },\n  },\n\n  language: \"ko\",\n  //아래 simpleUpload는 AWS 서버에 담아서 서버에서 가져오는 형식으로 구현해놓았다고 함.\n  //CKEditor의 Image Upload는 유료임\n  simpleUpload: {\n    uploadUrl: `${process.env.REACT_APP_BASIC_SERVER_URL}/api/post/image`,\n\n    // Headers sent along with the XMLHttpRequest to the upload server.\n\n    headers: {\n      \"X-CSRF-TOKEN\": \"CSFR-Token\",\n    },\n  },\n};\n\nexport const ReadOnly_Configuration = {\n  toolbar: [\"heading\"],\n\n  heading: {},\n};\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nclass MyUploadAdapter {\n  constructor(loader) {\n    // The file loader instance to use during the upload.\n    this.loader = loader;\n  }\n\n  // Starts the upload process.\n  upload() {\n    return this.loader.file.then(\n      (file) =>\n        new Promise((resolve, reject) => {\n          this._initRequest();\n          this._initListeners(resolve, reject, file);\n          this._sendRequest(file);\n        })\n    );\n  }\n\n  // Aborts the upload process.\n  abort() {\n    if (this.xhr) {\n      this.xhr.abort();\n    }\n  }\n\n  // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n  _initRequest() {\n    const xhr = (this.xhr = new XMLHttpRequest());\n\n    // Note that your request may look different. It is up to you and your editor\n    // integration to choose the right communication channel. This example uses\n    // a POST request with JSON as a data structure but your configuration\n    // could be different.\n    //xhr.open(\"POST\", \"http://example.com/image/upload/path\", true);\n\n    xhr.open(\n      \"POST\",\n      `${process.env.REACT_APP_BASIC_SERVER_URL}/api/post/image`,\n      true\n    );\n    xhr.responseType = \"json\";\n  }\n\n  // Initializes XMLHttpRequest listeners.\n  _initListeners(resolve, reject, file) {\n    const xhr = this.xhr;\n    const loader = this.loader;\n    const genericErrorText = `Couldn't upload file: ${file.name}.`;\n\n    xhr.addEventListener(\"error\", () => reject(genericErrorText));\n    xhr.addEventListener(\"abort\", () => reject());\n    xhr.addEventListener(\"load\", () => {\n      const response = xhr.response;\n\n      // This example assumes the XHR server's \"response\" object will come with\n      // an \"error\" which has its own \"message\" that can be passed to reject()\n      // in the upload promise.\n      //\n      // Your integration may handle upload errors in a different way so make sure\n      // it is done properly. The reject() function must be called when the upload fails.\n      if (!response || response.error) {\n        return reject(\n          response && response.error ? response.error.message : genericErrorText\n        );\n      }\n\n      // If the upload is successful, resolve the upload promise with an object containing\n      // at least the \"default\" URL, pointing to the image on the server.\n      // This URL will be used to display the image in the content. Learn more in the\n      // UploadAdapter#upload documentation.\n      resolve({\n        default: response.url,\n      });\n    });\n\n    // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n    // properties which are used e.g. to display the upload progress bar in the editor\n    // user interface.\n    if (xhr.upload) {\n      xhr.upload.addEventListener(\"progress\", (evt) => {\n        if (evt.lengthComputable) {\n          loader.uploadTotal = evt.total;\n          loader.uploaded = evt.loaded;\n        }\n      });\n    }\n  }\n\n  // Prepares the data and sends the request.\n  _sendRequest(file) {\n    // Prepare the form data.\n\n    const data = new FormData();\n\n    // console.log(data);\n\n    data.append(\"upload\", file);\n\n    // Important note: This is the right place to implement security mechanisms\n    // like authentication and CSRF protection. For instance, you can use\n    // XMLHttpRequest.setRequestHeader() to set the request headers containing\n    // the CSRF token generated earlier by your application.\n\n    // Send the request.\n    this.xhr.send(data);\n  }\n}\n\n// ...\nconst Myinit = (editor) => {\n  editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n    // Configure the URL to the upload script in your back-end here!\n    return new MyUploadAdapter(loader);\n  };\n};\n\nexport default Myinit;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Col,\n  Progress,\n} from \"reactstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\n//ballon???\nimport Myinit from \"../../components/editor/UploadAdapter\";\nimport { POST_UPLOADING_REQUEST } from \"../../redux/types\";\n\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst PostWrite = () => {\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  const [form, setValues] = useState({ title: \"\", contents: \"\", fileUrl: \"\" });\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    const { title, contents, fileUrl, category } = form;\n    const token = localStorage.getItem(\"token\");\n    const body = { title, contents, fileUrl, category, token };\n\n    //https://hianna.tistory.com/423\n    const regexSpace = /\\s/gi;\n    // const regexSeperator = /\\#/gi;\n    const regexSeperator = /#/gi;\n    let cateArray;\n\n    if (\n      body.category === null ||\n      body.category === undefined ||\n      body.category === \"\" ||\n      body.category.length === 0\n    ) {\n      cateArray = [\"미분류\"];\n    } else {\n      cateArray = body.category\n        .replace(regexSpace, \"\")\n        .split(/(#[^\\s#]+)/g)\n        .filter(Boolean);\n    }\n    cateArray.forEach((item, index, arrSelf) => {\n      item = item.replace(regexSeperator, \"\").replace(regexSpace, \"\");\n      arrSelf[index] = item;\n    });\n\n    body.category = cateArray.filter(Boolean);\n\n    dispatch({\n      type: POST_UPLOADING_REQUEST,\n      payload: body,\n    });\n  };\n\n  const getDataFromCKEditor = (event, editor) => {\n    const data = editor.getData();\n\n    if (data && data.match(\"<img src=\")) {\n      const whereImg_start = data.indexOf(\"<img src=\");\n\n      let whereImg_end = \"\";\n      let ext_name_find = \"\";\n      let result_Img_Url = \"\";\n      const ext_name = [\"jpeg\", \"png\", \"jpg\", \"gif\", \"bmp\"];\n\n      for (let i = 0; i < ext_name.length; i++) {\n        if (data.match(ext_name[i])) {\n          ext_name_find = ext_name[i];\n          whereImg_end = data.indexOf(`${ext_name[i]}`);\n        }\n      }\n\n      if (ext_name_find === \"jpeg\") {\n        result_Img_Url = data.substring(whereImg_start + 10, whereImg_end + 4);\n      } else {\n        result_Img_Url = data.substring(whereImg_start + 10, whereImg_end + 3);\n      }\n\n      setValues({\n        ...form,\n        fileUrl: result_Img_Url,\n        contents: data,\n      });\n    } else {\n      setValues({\n        ...form,\n        fileUrl: \"https://source.unsplash.com/random/301x201\",\n        // fileUrl: process.env.REACT_APP_BASIC_IMAGE_URL,\n        contents: data,\n      });\n    }\n  };\n\n  return (\n    <div>\n      {isAuthenticated ? (\n        <Form onSubmit={onSubmit}>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"title\">Title</Label>\n            <Input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              className=\"form-control\"\n              onChange={onChange}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"category\">Category</Label>\n            <Input\n              type=\"text\"\n              name=\"category\"\n              id=\"category\"\n              className=\"form-control\"\n              onChange={onChange}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"content\">Content</Label>\n            <CKEditor\n              editor={ClassicEditor}\n              config={editorConfiguration}\n              onReady={Myinit}\n              //글이 짧다면 onChange로 해도 되지만, onBlur 를 해주는게 실제 글을 작성하는데 있어서 좋음...\n              //동작 방식은 찾아보기.\n              onBlur={getDataFromCKEditor}\n            />\n\n            <Button\n              color=\"success\"\n              block\n              className=\"mt-3 col-md-2 offset-md-10 mb-3\"\n            >\n              제출하기\n            </Button>\n          </FormGroup>\n        </Form>\n      ) : (\n        <Col width={50} className=\"p-5 m-5\">\n          <Progress animated color=\"info\" value={100} />\n        </Col>\n      )}\n    </div>\n  );\n};\n\nexport default PostWrite;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  COMMENT_UPLOADING_REQUEST,\n  COMMENT_LOADING_REQUEST,\n} from \"../../redux/types\";\nimport { Form, FormGroup, Row, Input, Button } from \"reactstrap\";\n// import { BlockQuote } from \"@ckeditor/ckeditor5-block-quote/src/blockquote\";\n\nconst Comments = ({ id, userName, userId }) => {\n  const dispatch = useDispatch();\n  const [form, setValues] = useState({ contents: \"\" });\n\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    const { contents } = form;\n    const token = localStorage.getItem(\"token\");\n    const body = {\n      contents,\n      token,\n      id,\n      userName,\n      userId,\n    };\n\n    dispatch({\n      type: COMMENT_UPLOADING_REQUEST,\n      payload: body,\n    });\n    resetValue.current.value = \"\";\n    setValues(\"\");\n  };\n  const resetValue = useRef(null);\n\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: COMMENT_LOADING_REQUEST,\n      payload: id,\n    });\n  }, [dispatch, id]);\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <FormGroup>\n          <Row className=\"p-2\">\n            <div className=\"font-weight-bold m-1\">Make Comment</div>\n            <div className=\"my-1\" />\n            <Input\n              innerRef={resetValue}\n              type=\"textarea\"\n              name=\"contents\"\n              id=\"contents\"\n              onChange={onChange}\n              placeholder=\"Comment\"\n            />\n            <Button\n              color=\"primary\"\n              block\n              className=\"mt-2 offset-md-10 col-md-2\"\n            >\n              Submit\n            </Button>\n          </Row>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  POST_DELETE_REQUEST,\n  POST_DETAIL_LOADING_REQUEST,\n  USER_LOADING_REQUEST,\n} from \"../../redux/types\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport { GrowingSpinner } from \"../../components/spinner/Spinner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPencilAlt,\n  faCommentDots,\n  faMouse,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BallonEditor from \"@ckeditor/ckeditor5-editor-balloon/src/ballooneditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\nimport Comments from \"../../components/comments/Comments\";\nimport Category from \"../../components/post/Category\";\n\nconst PostDetail = (req) => {\n  const dispatch = useDispatch();\n  const { postDetail, creatorId, title, loading } = useSelector(\n    (state) => state.post\n  );\n  const { userId, userName } = useSelector((state) => state.auth);\n  //{comments}는 commentReducer의 initialState 안에 변수명으로 해준다.\n  const { comments } = useSelector((state) => state.comment);\n\n  useEffect(() => {\n    dispatch({\n      type: POST_DETAIL_LOADING_REQUEST,\n      payload: req.match.params.id,\n    });\n    dispatch({\n      type: USER_LOADING_REQUEST,\n      payload: localStorage.getItem(\"token\"),\n    });\n  }, [dispatch, req.match.params.id]);\n  //useEffect에 빈배열값을 넣어주지 않으면 무한반복하게 됨.\n\n  //딜리트 관련해서는 postSaga만 작성해주면 됨. 삭제해버리는 것은 별도의 상태변화가 없어서 Reducer작업은 안함\n  const onDeleteClick = () => {\n    dispatch({\n      type: POST_DELETE_REQUEST,\n      payload: {\n        id: req.match.params.id,\n        token: localStorage.getItem(\"token\"),\n      },\n    });\n  };\n\n  //작성자용\n  const EditButton = (\n    <Fragment>\n      <Row className=\"d-flex justify-content-center pb-3\">\n        <Col className=\"col-md-3 me-md-3 d-flex justify-content-center\">\n          <Link to=\"/\" className=\"btn btn-primary btn-block\">\n            Home\n          </Link>\n        </Col>\n        <Col className=\"col-md-3 me-md-3  d-flex justify-content-center\">\n          <Link\n            to={`/post/${req.match.params.id}/edit`}\n            className=\"btn btn-success btn-block\"\n          >\n            Edit Post\n          </Link>\n        </Col>\n        <Col className=\"col-md-3  d-flex justify-content-center\">\n          <Button block className=\"btn-danger\" onClick={onDeleteClick}>\n            Delete\n          </Button>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n\n  //방문객용\n  const HomeButton = (\n    <Fragment>\n      <Row className=\"d-flex justify-content-center pb-3\">\n        <Col className=\"col-sm-12 com-md-3\">\n          <Link to=\"/\" className=\"btn btn-primary btn-block\">\n            Home\n          </Link>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n\n  const body = (\n    <>\n      {userId === creatorId ? EditButton : HomeButton}\n      <Row className=\"d-flex border-bottom border-top border-top border-primary p-3 mb-3 justify-content-between\">\n        {(() => {\n          if (postDetail && postDetail.creator) {\n            return (\n              <Fragment>\n                <Row className=\"font-weight-bold text-big mb-2\">\n                  <Category post={postDetail.category} type=\"detail\" />\n                  {/* <span className=\"me-3\">\n                    <Button color=\"info\">\n                      {postDetail.category.categoryName}\n                    </Button>\n                  </span> */}\n                </Row>\n\n                <Row>\n                  <Col className=\"col-9 fw-bold fs-2\">\n                    <Row className=\"h-100\">\n                      <Col className=\"h-100\">\n                        <div>{postDetail.title}</div>\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col className=\"col-3\">\n                    <Row>\n                      <Col className=\"d-flex justify-content-end\">\n                        <div>작성자 : {postDetail.creator.name}</div>\n                      </Col>\n                      <div className=\"w-100\"></div>\n                      <Col className=\"d-flex justify-content-end align-items-baseline small\">\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                        &nbsp;\n                        <span> {postDetail.date}</span>\n                        &nbsp;&nbsp;\n                        <FontAwesomeIcon icon={faCommentDots} />\n                        &nbsp;\n                        <span> {postDetail.comments.length}</span>\n                        &nbsp;&nbsp;\n                        <FontAwesomeIcon icon={faMouse} />\n                        &nbsp;\n                        <span>{postDetail.views}</span>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Fragment>\n            );\n          }\n        })()}\n      </Row>\n\n      {postDetail && postDetail.comments ? (\n        <Fragment>\n          <Row className=\"mb-3\">\n            <CKEditor\n              editor={BallonEditor}\n              data={postDetail.contents}\n              config={editorConfiguration}\n              disabled=\"true\"\n            />\n          </Row>\n          <Row>\n            <Container className=\"mb-3 border border-blue rounded\">\n              {Array.isArray(comments)\n                ? comments.map(\n                    ({ contents, creator, date, _id, creatorName }) => (\n                      <div key={_id}>\n                        <Row className=\"justify-content-between p-2\">\n                          <div className=\"font-weight-bold\">\n                            {creatorName ? creatorName : creator}\n                          </div>\n                          <div className=\"text-small\">\n                            {/* //아래 내용은 날짜는 굵게, 시간은 얇게 설정해주기 위한 부분임 */}\n                            <span className=\"fw-bold\">\n                              {date.split(\" \")[0]}\n                            </span>\n                            <span className=\"fw-light\">\n                              {\" \"}\n                              {date.split(\" \")[1]}\n                            </span>\n                          </div>\n                        </Row>\n                        <Row className=\"p-2\">\n                          <div>{contents}</div>\n                        </Row>\n                        <hr />\n                      </div>\n                    )\n                  )\n                : \"Creator\"}\n              <Comments\n                //post id를 넘겨줌\n                id={req.match.params.id}\n                userId={userId}\n                userName={userName}\n              />\n            </Container>\n          </Row>\n        </Fragment>\n      ) : (\n        <h1> hi</h1>\n      )}\n    </>\n  );\n\n  return (\n    <div>\n      <Helmet title={`Post | ${title}`} />\n      {loading === true ? GrowingSpinner : body}\n    </div>\n  );\n};\n\nexport default PostDetail;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Row } from \"reactstrap\";\nimport { SEARCH_REQUEST } from \"../../redux/types\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  let { searchTerm } = useParams();\n  const { searchResult } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (searchTerm) {\n      dispatch({\n        type: SEARCH_REQUEST,\n        payload: searchTerm,\n      });\n    }\n  }, [dispatch, searchTerm]);\n\n  return (\n    <div>\n      <h1> 검색 결과 : \"{searchTerm}\"</h1>\n      <Row>\n        <PostCardOne post={searchResult} />\n      </Row>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\nimport { CATEGORY_FIND_REQUEST } from \"../../redux/types\";\nimport { Row } from \"reactstrap\";\n\nconst CategoryResult = () => {\n  const dispatch = useDispatch();\n  let { categoryName } = useParams();\n  const { categoryFindResult } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch({\n      type: CATEGORY_FIND_REQUEST,\n      payload: categoryName,\n    });\n  }, [dispatch, categoryName]);\n\n  return (\n    <div>\n      <h1> Category : \"{categoryName}\"</h1>\n      <Row>\n        <PostCardOne post={categoryFindResult.post} />\n      </Row>\n    </div>\n  );\n};\n\nexport default CategoryResult;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n//edit 를 하는데 단순히 게시물 주소 뒤에 \"~~~/edit\"을 붙여서 접속 가능하다면 보안의 문제가 있으므로 protectedRoute를 해줌\n//서버 쪽에서 auth 를 통해서 막아줄 수 있는데, 아래 방법은 Front에서 주소창을 이용한 접근을 막아줄 수 있는 방법임.\nexport const EditProtectedRoute = ({ component: Component, ...rest }) => {\n  const { userId } = useSelector((state) => state.auth);\n  const { creatorId } = useSelector((state) => state.post);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (userId === creatorId) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport const ProfileProtectedRoute = ({ component: Component, ...rest }) => {\n  const { userName } = useSelector((state) => state.auth);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (props.match.params.userName === userName) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Col,\n  Progress,\n} from \"reactstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\n//ballon???\nimport Myinit from \"../../components/editor/UploadAdapter\";\nimport { POST_EDIT_UPLOADING_REQUEST } from \"../../redux/types\";\n\nconst PostEdit = () => {\n  console.log(\"helloDD\");\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  const [form, setValues] = useState({\n    title: \"\",\n    contents: \"\",\n    fileUrl: \"\",\n    category: \"\",\n  });\n  const { postDetail } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  console.log(postDetail.category);\n  let beforeCategoryString = \"\";\n  if (\n    postDetail.category.length === 1 &&\n    postDetail.category[0].categoryName === \"미분류\"\n  ) {\n    beforeCategoryString = \"\";\n  } else {\n    for (let item of postDetail.category) {\n      beforeCategoryString =\n        beforeCategoryString + \"#\" + item.categoryName + \" \";\n    }\n  }\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    //강의에서는 category 수정은 안한다고 지웠는데 나는 냅뒀음.\n    console.log(form);\n    const { title, contents, fileUrl, category } = form;\n    const token = localStorage.getItem(\"token\");\n    const id = postDetail._id;\n    const body = { title, contents, fileUrl, category, token, id };\n    console.log(body.category);\n    const regexSpace = /\\s/gi;\n    // const regexSeperator = /\\#/gi;\n    const regexSeperator = /#/gi;\n    let cateArray;\n\n    if (Array.isArray(body.category)) {\n      let tempCategory = \"\";\n      for (let item of body.category) {\n        tempCategory = tempCategory + \"#\" + item.categoryName + \" \";\n      }\n      body.category = tempCategory;\n    }\n\n    if (\n      body.category === null ||\n      body.category === undefined ||\n      body.category === \"\" ||\n      body.category.length === 0\n    ) {\n      cateArray = [\"미분류\"];\n    } else if (\n      body.category.length === 1 &&\n      body.category[0].categoryName === \"미분류\"\n    ) {\n      cateArray = [\"미분류\"];\n    } else {\n      cateArray = body.category\n        .replace(regexSpace, \"\")\n        .split(/(#[^\\s#]+)/g)\n        .filter(Boolean);\n    }\n    cateArray.forEach((item, index, arrSelf) => {\n      item = item.replace(regexSeperator, \"\").replace(regexSpace, \"\");\n      arrSelf[index] = item;\n    });\n\n    body.category = cateArray.filter(Boolean);\n\n    dispatch({\n      type: POST_EDIT_UPLOADING_REQUEST,\n      payload: body,\n    });\n  };\n\n  //postDetail의 속성값들이 달라진다면 저장을 하라는 useEffect\n  useEffect(() => {\n    setValues({\n      title: postDetail.title,\n      contents: postDetail.contents,\n      fileUrl: postDetail.fileUrl,\n      category: postDetail.category,\n    });\n  }, [\n    postDetail,\n    postDetail.title,\n    postDetail.contents,\n    postDetail.fileUrl,\n    postDetail.category,\n  ]);\n\n  const getDataFromCKEditor = (event, editor) => {\n    const data = editor.getData();\n\n    if (data && data.match(\"<img src=\")) {\n      const whereImg_start = data.indexOf(\"<img src=\");\n\n      let whereImg_end = \"\";\n      let ext_name_find = \"\";\n      let result_Img_Url = \"\";\n      const ext_name = [\"jpeg\", \"png\", \"jpg\", \"gif\", \"bmp\"];\n\n      for (let i = 0; i < ext_name.length; i++) {\n        if (data.match(ext_name[i])) {\n          ext_name_find = ext_name[i];\n          whereImg_end = data.indexOf(`${ext_name[i]}`);\n        }\n      }\n\n      if (ext_name_find === \"jpeg\") {\n        result_Img_Url = data.substring(whereImg_start + 10, whereImg_end + 4);\n      } else {\n        result_Img_Url = data.substring(whereImg_start + 10, whereImg_end + 3);\n      }\n\n      setValues({\n        ...form,\n        fileUrl: result_Img_Url,\n        contents: data,\n      });\n    } else {\n      setValues({\n        ...form,\n        fileUrl: \"https://source.unsplash.com/random/301x201\",\n        // fileUrl: process.env.REACT_APP_BASIC_IMAGE_URL,\n        contents: data,\n      });\n    }\n  };\n\n  return (\n    <div>\n      {isAuthenticated ? (\n        <Form onSubmit={onSubmit}>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"title\">Title</Label>\n            <Input\n              defaultValue={postDetail.title}\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              className=\"form-control\"\n              onChange={onChange}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"category\">Category</Label>\n            <Input\n              // defaultValue={postDetail.category.categoryName}\n              defaultValue={beforeCategoryString}\n              type=\"text\"\n              name=\"category\"\n              id=\"category\"\n              className=\"form-control\"\n              onChange={onChange}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-3\">\n            <Label for=\"content\">Content</Label>\n            <CKEditor\n              editor={ClassicEditor}\n              config={editorConfiguration}\n              data={postDetail.contents}\n              onReady={Myinit}\n              //글이 짧다면 onChange로 해도 되지만, onBlur 를 해주는게 실제 글을 작성하는데 있어서 좋음...\n              //동작 방식은 찾아보기.\n              onBlur={getDataFromCKEditor}\n            />\n\n            <Button\n              color=\"success\"\n              block\n              className=\"mt-3 col-md-2 offset-md-10 mb-3\"\n            >\n              제출하기\n            </Button>\n          </FormGroup>\n        </Form>\n      ) : (\n        <Col width={50} className=\"p-5 m-5\">\n          <Progress animated color=\"info\" value={100} />\n        </Col>\n      )}\n    </div>\n  );\n};\n\nexport default PostEdit;\n","import React, { useState, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  CLEAR_ERROR_REQUEST,\n  PASSWORD_EDIT_UPLOADING_REQUEST,\n} from \"../../redux/types\";\nimport Helmet from \"react-helmet\";\nimport {\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n  Button,\n} from \"reactstrap\";\n\nconst Profile = () => {\n  const { userId, errorMsg, successMsg, previousMatchMsg } = useSelector(\n    (state) => state.auth\n  );\n  const { userName } = useParams();\n  const [form, setValues] = useState({\n    previousPassword: \"\",\n    password: \"\",\n    rePassword: \"\",\n  });\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    const { previousPassword, password, rePassword } = form;\n    const token = localStorage.getItem(\"token\");\n\n    const body = {\n      password,\n      token,\n      previousPassword,\n      rePassword,\n      userId,\n      userName,\n    };\n    dispatch({\n      type: CLEAR_ERROR_REQUEST,\n    });\n    dispatch({\n      type: PASSWORD_EDIT_UPLOADING_REQUEST,\n      payload: body,\n    });\n  };\n  return (\n    <Fragment>\n      <Helmet title={`Profile | ${userName}님의 프로필`} />\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <Card>\n          <CardHeader>\n            <strong>Edit Password</strong>\n          </CardHeader>\n          <CardBody>\n            <Form onSubmit={onSubmit}>\n              <FormGroup>\n                <Label for=\"title\">기존 비밀번호</Label>\n                <Input\n                  type=\"password\"\n                  name=\"previousPassword\"\n                  id=\"previousPassword\"\n                  className=\"form-control mb-2\"\n                  onChange={onChange}\n                />\n                {previousMatchMsg ? (\n                  <Alert color=\"danger\">{previousMatchMsg}</Alert>\n                ) : (\n                  \"\"\n                )}\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"title\">새로운 비밀번호</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  onChange={onChange}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"title\">비밀번호 확인</Label>\n                <Input\n                  type=\"password\"\n                  name=\"rePassword\"\n                  id=\"rePassword\"\n                  className=\"form-control mb-2\"\n                  onChange={onChange}\n                />\n                {errorMsg ? <Alert color=\"danger\">{errorMsg}</Alert> : \"\"}\n              </FormGroup>\n              <Button\n                color=\"success\"\n                block\n                className=\"mt-4 mb-4 col-md-3 offset-9\"\n              >\n                제출하기\n              </Button>\n              {successMsg ? <Alert color=\"danger\">{successMsg}</Alert> : \"\"}\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </Fragment>\n  );\n};\n\nexport default Profile;\n","import React, { Fragment } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport AppNavbar from \"../components/AppNavbar\";\nimport { Container } from \"reactstrap\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PostCardList from \"./normalRoute/PostCardList\";\nimport PostWrite from \"./normalRoute/PostWrite\";\nimport PostDetail from \"./normalRoute/PostDetail\";\nimport Search from \"./normalRoute/Search\";\nimport CategoryResult from \"./normalRoute/CategoryResult\";\nimport {\n  EditProtectedRoute,\n  ProfileProtectedRoute,\n} from \"./protectedRoute/ProtectedRoute\";\nimport PostEdit from \"./normalRoute/PostEdit\";\nimport Profile from \"./normalRoute/Profile\";\n\nconst MyRouter = () => (\n  <Fragment>\n    <AppNavbar />\n    <Header />\n    {/* <h1>Hello Body</h1> */}\n\n    <Container id=\"main-body\">\n      <Switch>\n        <Route path=\"/\" exact component={PostCardList} />\n        <Route path=\"/post\" exact component={PostWrite} />\n        <Route path=\"/post/:id\" exact component={PostDetail} />\n        <Route\n          path=\"/post/category/:categoryName\"\n          exact\n          component={CategoryResult}\n        />\n        <EditProtectedRoute path=\"/post/:id/edit\" exact component={PostEdit} />\n        <ProfileProtectedRoute\n          path=\"/user/:userName/profile\"\n          exact\n          component={Profile}\n        />\n        <Route path=\"/search/:searchTerm\" exact component={Search} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Container>\n    <Footer />\n  </Fragment>\n);\n\nexport default MyRouter;\n","import React, { Fragment } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport AppNavbar from \"../components/AppNavbar\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\n\nconst BannerIE = () => {\n  const onRedirectEdge = () => {\n    window.location = \"microsoft-edge:\" + window.location.href;\n  };\n\n  const EdgeButton = (\n    <Fragment>\n      <Row className=\"d-flex justify-content-center pb-3\">\n        <Col className=\"col-sm-12 com-md-3\">\n          <Button block className=\"btn-check\" onClick={onRedirectEdge}>\n            OPEN with Edge\n          </Button>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <AppNavbar />\n      <Header />\n\n      <Container id=\"main-body\">\n        {<h1> 이 브라우저는 오래 되었습니다.</h1>}\n        {EdgeButton}\n      </Container>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default BannerIE;\n","import React, { useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport store, { history } from \"./store\";\nimport MyRouter from \"./routes/Router\";\nimport BannerIE from \"./routes/BannerIE\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/custom.scss\";\nconst App = () => {\n  console.log(\"start\");\n\n  const [isIe, setIsIe] = useState(false);\n\n  const checkIE = () => {\n    if (navigator.userAgent.indexOf(\"Trident\") > 0) {\n      return true;\n    } else if (/MSIE \\d |Trident.*rv:/.test(navigator.userAgent)) {\n      return true;\n    }\n  };\n\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        {checkIE ? <BannerIE /> : <MyRouter />}\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import store from \"../../store\";\nimport { USER_LOADING_REQUEST } from \"../../redux/types\";\n\nconst loadUser = () => {\n  try {\n    store.dispatch({\n      type: USER_LOADING_REQUEST,\n      payload: localStorage.getItem(\"token\"),\n    });\n  } catch (e) {\n    console.log(\"client/auth/loadUser.js =>\", e);\n  }\n};\n\nexport default loadUser;\n","import \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport loadUser from \"./components/auth/loadUser\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nloadUser();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}